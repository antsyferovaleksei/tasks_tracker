const { createClient } = require('@supabase/supabase-js');

async function executeSQLManually() {
  require('dotenv').config();
  
  const supabaseUrl = 'https://gwkyqchyuihmgpvqosvk.supabase.co';
  const supabaseKey = process.env.SUPABASE_KEY;
  
  const supabase = createClient(supabaseUrl, supabaseKey);

  console.log('üî® –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–∞–±–ª–∏—Ü—å –≤—Ä—É—á–Ω—É...');

  // SQL –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –≤—Å—ñ—Ö —Ç–∞–±–ª–∏—Ü—å
  const createUsersSQL = `
    CREATE TABLE IF NOT EXISTS users (
      id UUID DEFAULT gen_random_uuid() PRIMARY KEY,
      email TEXT UNIQUE NOT NULL,
      name TEXT NOT NULL,
      password TEXT NOT NULL,
      avatar TEXT,
      created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
      updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
    );
  `;

  console.log('üìã SQL –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–∞–±–ª–∏—Ü—å:');
  console.log('=====================================');
  console.log('1. –¢–∞–±–ª–∏—Ü—è users:');
  console.log(createUsersSQL);
  
  console.log('2. –¢–∞–±–ª–∏—Ü—è projects:');
  console.log(`
    CREATE TABLE IF NOT EXISTS projects (
      id UUID DEFAULT gen_random_uuid() PRIMARY KEY,
      name TEXT NOT NULL,
      description TEXT,
      color TEXT DEFAULT '#1976d2',
      archived BOOLEAN DEFAULT FALSE,
      user_id UUID REFERENCES users(id) ON DELETE CASCADE,
      created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
      updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
    );
  `);

  console.log('3. –¢–∞–±–ª–∏—Ü—è tasks:');
  console.log(`
    CREATE TABLE IF NOT EXISTS tasks (
      id UUID DEFAULT gen_random_uuid() PRIMARY KEY,
      title TEXT NOT NULL,
      description TEXT,
      status TEXT DEFAULT 'TODO',
      priority TEXT DEFAULT 'MEDIUM',
      due_date TIMESTAMP WITH TIME ZONE,
      completed_at TIMESTAMP WITH TIME ZONE,
      archived BOOLEAN DEFAULT FALSE,
      user_id UUID REFERENCES users(id) ON DELETE CASCADE,
      project_id UUID REFERENCES projects(id) ON DELETE SET NULL,
      created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
      updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
    );
  `);

  console.log('4. –¢–∞–±–ª–∏—Ü—è tags:');
  console.log(`
    CREATE TABLE IF NOT EXISTS tags (
      id UUID DEFAULT gen_random_uuid() PRIMARY KEY,
      name TEXT UNIQUE NOT NULL,
      color TEXT DEFAULT '#666666',
      created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
      updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
    );
  `);

  console.log('5. –¢–∞–±–ª–∏—Ü—è task_tags:');
  console.log(`
    CREATE TABLE IF NOT EXISTS task_tags (
      task_id UUID REFERENCES tasks(id) ON DELETE CASCADE,
      tag_id UUID REFERENCES tags(id) ON DELETE CASCADE,
      PRIMARY KEY (task_id, tag_id)
    );
  `);

  console.log('=====================================');
  console.log('üåê –°–∫–æ–ø—ñ—é–π—Ç–µ —Ü–µ–π SQL –∫–æ–¥ —Ç–∞ –≤–∏–∫–æ–Ω–∞–π—Ç–µ –≤ Supabase Dashboard:');
  console.log('https://supabase.com/dashboard/project/gwkyqchyuihmgpvqosvk/editor');
  console.log('=====================================');

  // –¢–µ—Å—Ç—É—î–º–æ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –ø—Ä–æ—Å—Ç–æ—ó —Ç–∞–±–ª–∏—Ü—ñ users
  try {
    const { data, error } = await supabase
      .from('users')
      .insert({
        email: 'test@test.com',
        name: 'Test User',
        password: 'test123'
      })
      .select()
      .single();

    if (error) {
      if (error.code === '42P01') {
        console.log('‚ùå –¢–∞–±–ª–∏—Ü—ñ —â–µ –Ω–µ —Å—Ç–≤–æ—Ä–µ–Ω—ñ. –í–∏–∫–æ–Ω–∞–π—Ç–µ SQL –≤–∏—â–µ –≤ Dashboard.');
        return false;
      } else {
        console.log('‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞:', error.message);
        return false;
      }
    } else {
      console.log('‚úÖ –¢–∞–±–ª–∏—Ü—è users –ø—Ä–∞—Ü—é—î!');
      // –í–∏–¥–∞–ª—è—î–º–æ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
      await supabase.from('users').delete().eq('id', data.id);
      console.log('üóëÔ∏è –¢–µ—Å—Ç–æ–≤–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –≤–∏–¥–∞–ª–µ–Ω–æ');
      return true;
    }
  } catch (err) {
    console.error('üí• –ü–æ–º–∏–ª–∫–∞:', err.message);
    return false;
  }
}

executeSQLManually(); 