const { createClient } = require('@supabase/supabase-js');

async function createMinimalTable() {
  require('dotenv').config();
  
  const supabaseUrl = 'https://gwkyqchyuihmgpvqosvk.supabase.co';
  const supabaseKey = process.env.SUPABASE_KEY;
  
  const supabase = createClient(supabaseUrl, supabaseKey);

  console.log('üéØ –ú—ñ–Ω—ñ–º–∞–ª—å–Ω–µ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–∞–±–ª–∏—Ü—ñ users...');
  console.log('========================');
  
  console.log('üìù –ö–†–û–ö 1: –í—ñ–¥–∫—Ä–∏–π—Ç–µ Supabase SQL Editor:');
  console.log('üåê https://supabase.com/dashboard/project/gwkyqchyuihmgpvqosvk/editor');
  
  console.log('\nüìù –ö–†–û–ö 2: –í—Å—Ç–∞–≤—Ç–µ —Ç–∞ –≤–∏–∫–æ–Ω–∞–π—Ç–µ —Ü–µ–π SQL:');
  console.log('```sql');
  console.log(`CREATE TABLE users (
  id UUID DEFAULT gen_random_uuid() PRIMARY KEY,
  email TEXT UNIQUE NOT NULL,
  name TEXT NOT NULL,
  password TEXT NOT NULL,
  avatar TEXT,
  created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
  updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);`);
  console.log('```');
  
  console.log('\nüìù –ö–†–û–ö 3: –ü—ñ—Å–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–∞–±–ª–∏—Ü—ñ –∑–∞–ø—É—Å—Ç—ñ—Ç—å —Ç–µ—Å—Ç:');
  console.log('node scripts/test-registration.js');
  
  console.log('\nüîÑ –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–µ —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥...');
  
  setTimeout(async () => {
    console.log('\nüß™ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è —ñ—Å–Ω—É–≤–∞–Ω–Ω—è —Ç–∞–±–ª–∏—Ü—ñ...');
    
    try {
      const { data, error } = await supabase
        .from('users')
        .select('count')
        .limit(1);
        
      if (error) {
        if (error.code === '42P01') {
          console.log('‚ùå –¢–∞–±–ª–∏—Ü—è users —â–µ –Ω–µ —ñ—Å–Ω—É—î');
          console.log('üëÜ –í–∏–∫–æ–Ω–∞–π—Ç–µ SQL –∫–æ–¥ –≤–∏—â–µ –≤ Dashboard');
        } else {
          console.log('‚ö†Ô∏è –Ü–Ω—à–∞ –ø–æ–º–∏–ª–∫–∞:', error.message);
        }
      } else {
        console.log('‚úÖ –¢–∞–±–ª–∏—Ü—è users —ñ—Å–Ω—É—î —Ç–∞ –¥–æ—Å—Ç—É–ø–Ω–∞!');
        console.log('üéâ –ú–æ–∂–Ω–∞ —Ç–µ—Å—Ç—É–≤–∞—Ç–∏ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—é –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤');
      }
    } catch (err) {
      console.log('üí• –ü–æ–º–∏–ª–∫–∞ —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è:', err.message);
    }
  }, 5000);
}

createMinimalTable(); 